FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04

MAINTAINER Luke Kulik

RUN apt-get update && apt-get install -y --no-install-recommends \
        software-properties-common

RUN add-apt-repository ppa:deadsnakes/ppa

RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        git \
        vim \
        pkg-config \
        rsync \
        unzip \
        wget \
        tmux \
        htop \
        unrar \
        cmake \
        gfortran\
        python \
        python-dev \
        python3.6 \
        python3.6-dev \
        libfreetype6-dev \
        libpng12-dev \
        libzmq3-dev \
        libavcodec-dev \
        libavformat-dev \
        libswscale-dev \
        libgtk2.0-dev \
        libatlas-base-dev \
        libv4l-dev\
        libjpeg8-dev \
        libtiff5-dev \
        libjasper-dev \
        libpng12-dev \
        libjpeg-dev \
        libopenblas-dev \
        liblapack-dev \
        libhdf5-serial-dev \
        netcdf-bin \
        libnetcdf-dev \
        libgeos-3.5.0 \
        libgeos-c1v5 \
        libgeos-dev \
        ffmpeg \
        sshfs \
        libgdal-dev \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
    
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 2
RUN update-alternatives --config python3

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py && \
    python get-pip.py && \
    rm get-pip.py
    
RUN pip --no-cache-dir install \
        ipykernel \
        jupyter \
        jupyterlab \
        matplotlib \
        numpy \
        scipy \
        sklearn \
        pandas \
        pillow-simd \
        keras \
        bcolz \
        futures \
        tensorflow-gpu==1.4.0 \
        h5py \
        awscli \
        satpy \
        h5netcdf \
        opencv-python \
        Cython \
        theano \
        netCDF4 \
        scikit-image \
        tensorboardX \
      #  torch \
      #  torchvision \
        http://github.com/matplotlib/basemap/archive/v1.1.0.zip \
        spacy==1.10.1 \
        chainer \
        pytest \
        gensim \
        pyxDamerauLevenshtein \
        pymc3==3.2 \
        seaborn \
        && \
    python -m ipykernel.kernelspec

RUN pip3 --no-cache-dir install \
        ipykernel \
        jupyter \
        jupyterlab \
        matplotlib \
        numpy \
        scipy \
        sklearn \
        pandas \
        pillow-simd \
        keras \
        bcolz \
        futures \
        tensorflow-gpu==1.4.0 \
        h5py==2.8.0rc1 \
        awscli \
        satpy \
        h5netcdf \
        tqdm \
        opencv-python \
        Cython \
        theano \
        netCDF4 \
        scikit-image \
        tensorboardX \
   #     torch \
   #     torchvision \
        http://github.com/matplotlib/basemap/archive/v1.1.0.zip \
        spacy==1.10.1 \
        chainer \
        pytest \
        gensim \
        pyxDamerauLevenshtein \
        pymc3==3.2 \
        seaborn \
        && \
    python3 -m ipykernel.kernelspec
    
# Clone libgpuarray repo and move into it
RUN cd /root && git clone https://github.com/Theano/libgpuarray.git && cd libgpuarray && \
# Make and move into build directory
  mkdir Build && cd Build && \
# CMake
  cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr && \
# Make
  make -j"$(nproc)" && \
  make install
# Install pygpu
RUN cd /root/libgpuarray && \
  python3 setup.py build_ext -L /usr/lib -I /usr/include && \
  python3 setup.py install

# Set up our notebook config.
COPY jupyter_notebook_config.py /root/.jupyter/

# Copy sample notebooks.
COPY notebooks /notebooks

# Jupyter has issues with being run directly:
#   https://github.com/ipython/ipython/issues/7062
# We just add a little wrapper script.
COPY run_jupyter.sh /

# For CUDA profiling, TensorFlow requires CUPTI.
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH

# Set up .theanorc for CUDA
RUN echo "[global]\ndevice=cuda\nfloatX=float32\noptimizer_including=cudnn\n[lib]\ncnmem=0.1\n[nvcc]\nfastmath=True" > /root/.theanorc

# TensorBoard
EXPOSE 6006
# IPython
EXPOSE 8888

WORKDIR "/workspace"
